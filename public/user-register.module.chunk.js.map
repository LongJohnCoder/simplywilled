{"version":3,"sources":["./src/app/user/user-auth/user-register/edual-validator.directive.ts","./src/app/user/user-auth/user-register/user-register-routing.module.ts","./src/app/user/user-auth/user-register/user-register.component.css","./src/app/user/user-auth/user-register/user-register.component.html","./src/app/user/user-auth/user-register/user-register.component.ts","./src/app/user/user-auth/user-register/user-register.module.ts"],"names":[],"mappings":"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","file":"user-register.module.chunk.js","sourcesContent":["import {Attribute, Directive, forwardRef} from '@angular/core';\nimport {AbstractControl, NG_VALIDATORS} from \"@angular/forms\";\n\n@Directive({\n    selector: '[validateEqual][formControlName],[validateEqual][formControl],[validateEqual][ngModel]',\n    providers: [\n        { provide: NG_VALIDATORS, useExisting: forwardRef(() => EqualValidatorDirective), multi: true }\n    ]\n})\nexport class EqualValidatorDirective {\n\n    constructor(@Attribute('validateEqual') public validateEqual: string) { }\n\nvalidate(c: AbstractControl): { [key: string]: any } {\n// self value (e.g. retype password)\n        let v = c.value;\n\n// control value (e.g. password)\n        let e = c.root.get(this.validateEqual);\n\n// value not equal\n        if (e && v !== e.value) return {\n            validateEqual: false\n        };\n        return null;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-auth/user-register/edual-validator.directive.ts","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserRegisterComponent } from './user-register.component';\n\nconst routes: Routes = [\n  { path: '', component: UserRegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRegisterRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-auth/user-register/user-register-routing.module.ts","module.exports = \".login_btn:disabled {\\n    opacity:0.3;\\n    cursor: auto;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-auth/user-register/user-register.component.css\n// module id = ./src/app/user/user-auth/user-register/user-register.component.css\n// module chunks = user-register.module","module.exports = \"<div class=\\\"confirmd_main grey_bg border_top_green\\\">\\n  <div class=\\\"wrapper\\\">\\n    <div class=\\\"confirm_right\\\">\\n      <div class=\\\"confirmed_form_top\\\">\\n        <h1 class=\\\"form_heading\\\">Let’s get started</h1>\\n        <p class=\\\"form_pera\\\">SimplyWilled is the easiest way to make your estate plan online. Sign up below to get started.</p>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12\\\">\\n          <div *ngIf=\\\"!setRequestStatus && responseReceived\\\" class=\\\"alert alert-danger\\\">\\n            <strong>{{ setResponseMsg }}</strong>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-12\\\">\\n          <div *ngIf=\\\"setRequestStatus && responseReceived\\\" class=\\\"alert alert-success\\\">\\n            <strong>{{ setResponseMsg }}</strong>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"confirmed_form_white_sec\\\">\\n        <form id=\\\"signInForm\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form)\\\">\\n          <input type=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email Address\\\" class=\\\"email_form\\\"\\n                 ngModel\\n                 required\\n                 pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                 #email=\\\"ngModel\\\">\\n          <span class=\\\"alert-danger\\\"\\n                *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\">\\n                <p *ngIf=\\\"email.errors?.required\\\">Email is required</p>\\n                <p *ngIf=\\\"email.errors?.pattern\\\">Email is not correct!</p>\\n          </span>\\n\\n          <input type=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"email_form\\\"\\n                 ngModel\\n                 required\\n                 #password=\\\"ngModel\\\" minlength=\\\"6\\\">\\n\\n          <span class=\\\"alert-danger\\\"\\n                *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\">\\n                <p *ngIf=\\\"password.errors?.required\\\">Password is required</p>\\n                <p *ngIf=\\\"password.errors?.minlength\\\">Password should be minimum 6!</p>\\n          </span>\\n\\n          <input type=\\\"password\\\" name=\\\"confirm_password\\\" placeholder=\\\"Confirm Password\\\" class=\\\"email_form\\\"\\n                 ngModel\\n                 required\\n                 #confirm=\\\"ngModel\\\" validateEqual=\\\"password\\\" minlength=\\\"6\\\">\\n\\n          <span class=\\\"alert-danger\\\"\\n                *ngIf=\\\"confirm.errors && (confirm.dirty || confirm.touched)\\\">\\n                <p *ngIf=\\\"confirm.errors?.required\\\">Confirm Password is required</p>\\n                <p *ngIf=\\\"confirm.errors?.minlength\\\">Confirm Password should be minimum 6!</p>\\n          </span>\\n          <span *ngIf=\\\"confirm.invalid && (confirm.dirty || confirm.touched)\\\" class=\\\"text-danger\\\">\\n              <p>Confirm Password should be same as password!</p>\\n          </span>\\n\\n          <div class=\\\"loader_parent\\\" id=\\\"response_loader\\\">\\n            <span class=\\\"loader\\\"></span>\\n          </div>\\n          <div class=\\\"get_start_main\\\">\\n            <div class=\\\"clicking_left\\\">\\n              <a routerLink=\\\"/sign-in\\\" class=\\\"already_account\\\">Login</a>\\n              <a href=\\\"\\\" class=\\\"already_account\\\">Forgot your password?</a>\\n            </div>\\n            <!--<a class=\\\"login_btn\\\"><i class=\\\"fa fa-chevron-right\\\" aria-hidden=\\\"true\\\"></i> Login</a>-->\\n            <button value=\\\"Continue\\\" [disabled]=\\\"form.invalid\\\" class=\\\"login_btn\\\"> <i class=\\\"fa fa-chevron-right\\\" aria-hidden=\\\"true\\\"></i>Register</button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n    <div class=\\\"confirm_left\\\">\\n        <h1 class=\\\"login_text\\\">Sign up to create your account.</h1>\\n\\n\\n        <ul class=\\\"protect_loved_ul2\\\">\\n            <li>\\n                <span class=\\\"loved_img2\\\"><img src=\\\"../../../../assets/images/protect-img.png\\\" alt=\\\"protect img\\\"></span>\\n                <div class=\\\"protect_loved_right2\\\">\\n                    <h2>PROTECT YOUR LOVED ONES</h2>\\n                    <p>Name guardians and list beneficiaries so those you love are in good hands.</p>\\n                </div>\\n            </li>\\n            <li>\\n                <span class=\\\"loved_img2\\\"><img src=\\\"../../../../assets/images/protect-img.png\\\" alt=\\\"protect img\\\"></span>\\n                <div class=\\\"protect_loved_right2\\\">\\n                    <h2>PROTECT YOUR ASSETS</h2>\\n                    <p>Ensure the assets you’ve worked hard for pass to the ones you love.</p>\\n                </div>\\n            </li>\\n            <li>\\n                <span class=\\\"loved_img2\\\"><img src=\\\"../../../../assets/images/protect-img.png\\\" alt=\\\"protect img\\\"></span>\\n                <div class=\\\"protect_loved_right2\\\">\\n                    <h2>SAVE TIME &amp; MONEY</h2>\\n                    <p>It takes less than 15 minutes and your done. Try it today and\\n                        see how simple preparing  your last will and testament online can be.</p>\\n                </div>\\n            </li>\\n        </ul>\\n\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"about_sec4 grey_bg\\\">\\n  <div class=\\\"wrapper\\\">\\n    <h1 class=\\\"about_state_planning_text\\\">Estate Planning Made Simple & Affordable.</h1>\\n    <h4 class=\\\"select_plan\\\">Select your plan now and Keep your loved ones safe!</h4>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/user/user-auth/user-register/user-register.component.html\n// module id = ./src/app/user/user-auth/user-register/user-register.component.html\n// module chunks = user-register.module","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { UserService } from '../../user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-register',\n  templateUrl: './user-register.component.html',\n  styleUrls: ['./user-register.component.css']\n})\nexport class UserRegisterComponent implements OnInit {\n\n  constructor( private userService: UserService , private router: Router) { }\n\n  showLoader: boolean;\n  responseReceived: boolean;\n  setRequestStatus: boolean;\n  setResponseMsg: string;\n\n\n  ngOnInit() {\n    this.showLoader =  false;\n    this.responseReceived = false;\n    this.setRequestStatus = false;\n    this.setResponseMsg = '';\n  }\n\n  /**\n   * this function logs user in\n   * @param {NgForm} formRegister\n   */\n  onSubmit( formRegister: NgForm ) {\n    this.showLoader = true;\n    this.userService.register( formRegister.value )\n    .subscribe(\n      ( response: any ) => {\n        this.showLoader = false;\n        if (response.status) {\n          localStorage.setItem( 'loggedInUser', JSON.stringify(response) );\n          localStorage.setItem('_loggedInToken', response.token);\n          this.router.navigate(['/dashboard']);\n        } else {\n\n          this.setRequestStatus = false;\n          this.setResponseMsg = 'Some error occured';\n        }\n      },\n      ( error: HttpErrorResponse ) => {\n        this.setRequestStatus = false;\n        this.setResponseMsg = error.error.error;\n        this.showLoader = false;\n        this.responseReceived = true;\n        setTimeout( () => {\n          this.responseReceived = false;\n        }, 5000);\n      },\n      () => {\n\n        formRegister.reset();\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-auth/user-register/user-register.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRegisterRoutingModule } from './user-register-routing.module';\nimport { UserRegisterComponent } from './user-register.component';\nimport { FormsModule } from '@angular/forms';\nimport {EqualValidatorDirective} from './edual-validator.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UserRegisterRoutingModule,\n    FormsModule\n  ],\n  declarations: [UserRegisterComponent, EqualValidatorDirective]\n})\nexport class UserRegisterModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/user/user-auth/user-register/user-register.module.ts"],"sourceRoot":"webpack:///"}