{"version":3,"sources":["./src/app/admin/auth/admin-login/admin-login-routing.module.ts","./src/app/admin/auth/admin-login/admin-login.component.css","./src/app/admin/auth/admin-login/admin-login.component.html","./src/app/admin/auth/admin-login/admin-login.component.ts","./src/app/admin/auth/admin-login/admin-login.module.ts"],"names":[],"mappings":"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","file":"admin-login.module.chunk.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AdminLoginComponent} from './admin-login.component';\n\nconst routes: Routes = [\n    { path: '', component: AdminLoginComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AdminLoginRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/auth/admin-login/admin-login-routing.module.ts","module.exports = \"\\n.formContainer{\\n    margin: 0 auto;\\n}\\n.formContainer .panel{\\n    background: #fff;\\n    -webkit-box-shadow: 0 0 5px rgba(0,0,0,0.3);\\n            box-shadow: 0 0 5px rgba(0,0,0,0.3);\\n    border-radius: 5px;\\n}\\n.formContainer .panel-body, .formContainer .panel-heading{\\n    padding: 15px;\\n}\\n.formContainer .panel .panel-heading{\\nborder-bottom:1px solid #ddd;\\nbackground: none;\\n}\\n.panel-default > .panel-heading {\\n  color: #000;\\n  background-color: #FFFFFF;\\n  border-color: #ddd;\\n  font-weight: bold;\\n}\\n.panel-title{\\n    font-size: 16px;\\n}\\n.panel-heading h1{\\n    margin-bottom: 10px;\\n}\\n.remember{\\n    font-size: 14px;\\n}\\n.reset, .forget{\\n    background: none;\\n    border:none;\\n    cursor:pointer;\\n    font-size: 14px;\\n    color: #555;\\n    margin-top: 10px;\\n}\\n.forget{\\n    float: right;\\n}\\n.reset:hover, .forget:hover{\\n    text-decoration: underline;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/auth/admin-login/admin-login.component.css\n// module id = ./src/app/admin/auth/admin-login/admin-login.component.css\n// module chunks = admin-login.module","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <!--<div class=\\\"col-md-3 hidden-xs hidden-sm\\\"></div>-->\\n    <div class=\\\"col-md-4 formContainer\\\">\\n      <div class=\\\"login-panel panel panel-default\\\">\\n        <div class=\\\"panel-heading\\\">\\n            <h1 class=\\\"text-center\\\">SimplyWilled.Dev</h1>\\n            <h3 class=\\\"panel-title\\\">Please Sign In</h3>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-12\\\">\\n            <div *ngIf=\\\"!loginRequestStatus && responseReceived\\\" class=\\\"alert alert-danger\\\">\\n              <strong>{{ loginRequestResponseMsg }}</strong>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-12\\\">\\n            <div *ngIf=\\\"loginRequestStatus && responseReceived\\\" class=\\\"alert alert-success\\\">\\n              <strong>{{ loginRequestResponseMsg }}</strong>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"panel-body\\\">\\n          <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form)\\\">\\n\\n            <fieldset>\\n              <div class=\\\"form-group\\\">\\n                <input\\n                        class=\\\"form-control\\\"\\n                        placeholder=\\\"Email Address\\\"\\n                        type=\\\"email\\\"\\n                        name=\\\"email\\\"\\n                        ngModel\\n                        required\\n                        pattern=\\\"[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,3}$\\\"\\n                        #email=\\\"ngModel\\\"\\n                >\\n              </div>\\n              <div class=\\\"alert alert-danger\\\"\\n                   *ngIf=\\\"email.errors && (email.dirty || email.touched)\\\">\\n                <p *ngIf=\\\"email.errors?.required\\\">Email is required</p>\\n                <p *ngIf=\\\"email.errors?.pattern\\\">Email is not correct!</p>\\n              </div>\\n\\n\\n              <div class=\\\"form-group\\\">\\n                <input\\n                        class=\\\"form-control\\\"\\n                        placeholder=\\\"Password\\\"\\n                        type=\\\"password\\\"\\n                        name=\\\"password\\\"\\n                        ngModel\\n                        required\\n                        #password=\\\"ngModel\\\"\\n                >\\n              </div>\\n              <div class=\\\"alert alert-danger\\\"\\n                   *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\">\\n                <p *ngIf=\\\"password.errors?.required\\\">Password is required</p>\\n              </div>\\n\\n              <div class=\\\"checkbox\\\">\\n              <label class=\\\"remember\\\">\\n              <input name=\\\"remember\\\" type=\\\"checkbox\\\" value=\\\"Remember Me\\\"> Remember Me\\n              </label>\\n              </div>\\n\\n              <button\\n                      [disabled]=\\\"form.invalid\\\"\\n                      class=\\\"btn btn-lg btn-success btn-block\\\"\\n              >\\n                <i *ngIf=\\\"showLoader\\\" class=\\\"fa fa-spinner fa-pulse fa-lg fa-fw\\\"></i>\\n                Login\\n              </button>\\n             <!--<button type=\\\"reset\\\" class=\\\"reset\\\" [disabled]=\\\"showLoader\\\" (click)=\\\"onReset(form)\\\"></button>\\n              <button type=\\\"button\\\" class=\\\"forget\\\" [disabled]=\\\"showLoader\\\" (click)=\\\"onForgotPassword()\\\">Forgot Password</button>-->\\n\\n            </fieldset>\\n          </form>\\n        </div>\\n      </div>\\n    </div><!-- /.col-->\\n   <!-- <div class=\\\"col-md-3 hidden-xs hidden-sm\\\"></div>-->\\n  </div><!-- /.row -->\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/auth/admin-login/admin-login.component.html\n// module id = ./src/app/admin/auth/admin-login/admin-login.component.html\n// module chunks = admin-login.module","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { AdminLoginService } from './admin-login.service';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css'],\n})\nexport class AdminLoginComponent implements OnInit {\n\n  showLoader              = false; // Track if loader should be shown or not\n  responseReceived        = false; // Track is some response has been recieved or not\n  loginRequestStatus      = false; // Track response of login request\n  loginRequestResponseMsg = ''; // Store success or error message from backend depending on response\n\n  constructor( private loginService: AdminLoginService, private router: Router) { }\n\n  ngOnInit() {}\n\n  onSubmit( formSignIn: NgForm ) {\n    this.showLoader = true;\n    console.log(formSignIn);\n\n    const body = {\n      email : formSignIn.value.email,\n      password : formSignIn.value.password\n    };\n\n    this.loginService.login( body )\n    .subscribe(\n      ( response: any ) => {\n        this.responseReceived = true;\n        if ( response.status ) {\n          localStorage.setItem( 'loggedInAdminData', JSON.stringify(response) );\n          this.loginRequestStatus = true;\n          this.loginRequestResponseMsg = response.message;\n          this.router.navigate( [ '/admin-panel/dashboard'] );\n        } else {\n          this.loginRequestStatus = true;\n          this.loginRequestResponseMsg = response.message;\n        }\n      }, ( error: HttpErrorResponse ) => {\n        this.loginRequestStatus = false;\n        this.loginRequestResponseMsg = error.error.error;\n        this.showLoader = false;\n        this.responseReceived = true;\n        setTimeout( () => {\n          this.responseReceived = false;\n        }, 5000);\n      },\n      () => {\n\n        formSignIn.reset();\n      }\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/auth/admin-login/admin-login.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport { AdminLoginRoutingModule } from './admin-login-routing.module';\nimport { AdminLoginComponent } from './admin-login.component';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n      HttpClientModule,\n    AdminLoginRoutingModule,\n      FormsModule,\n  ],\n  declarations: [AdminLoginComponent]\n})\nexport class AdminLoginModule { }\n\n\n// WEBPACK FOOTER //\n// ./src/app/admin/auth/admin-login/admin-login.module.ts"],"sourceRoot":"webpack:///"}